{"ast":null,"code":"var _jsxFileName = \"/Users/kangwang/Documents/GitHub/IntelliHealth/IntelliHealthApp/IntelliHealthReact/intellihealthfrontend/src/components/Physician.js\";\nimport React, { Component } from 'react';\nimport { Button, Input, Card, Form, InputNumber } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ASK_QUETIONS_URL = 'http://127.0.0.1:5000/api/v1/chat/';\nconst QUOTE_MODEL_URL = 'http://127.0.0.1:5000/api/v1/model/prediction';\nconst {\n  TextArea\n} = Input;\nlet text1 = \"sea\";\nclass Physician extends Component {\n  constructor(props) {\n    super(props);\n    // define state for the components states\n    this.onClickQuetions = async () => {\n      console.log(\"clicked ask quetions\");\n\n      // const response = await this.onAskQuestions();\n      // // console.log(response);\n      // this.setState({ currentAnswer: response });\n      // console.log(this.state.currentAnswer);\n      // // console.log(this.state.currentAnswer.created)\n\n      await this.onAskQuestions();\n      console.log(this.state.currentAnswer);\n    };\n    this.onSetAnswers = async response => {\n      await this.setState({\n        currentAnswer: response\n      });\n      console.log(this.state.currentAnswer);\n    };\n    this.onClickModels = async () => {\n      console.log(\"clicked quote models\");\n      const response = await this.onQuoteModels();\n      console.log(response);\n    };\n    this.onChangeQuestions = async e => {\n      await this.setState({\n        currentQuestion: e.target.value\n      });\n      console.log(this.state.currentQuestion);\n    };\n    this.onChangeModels = async e => {\n      await this.setState({\n        currentQuote: e.target.value\n      });\n      console.log(this.state.currentQuote);\n    };\n    this.onChangeGender = async e => {\n      await this.setState({\n        gender: e\n      });\n      console.log(this.state.gender);\n    };\n    this.onChangeAge = async e => {\n      await this.setState({\n        age: e\n      });\n      console.log(this.state.age);\n    };\n    this.onChangeHypentension = async e => {\n      await this.setState({\n        hypentension: e\n      });\n      console.log(this.state.hypentension);\n    };\n    this.onChangeHeartdisease = async e => {\n      await this.setState({\n        heartdisease: e\n      });\n      console.log(this.state.heartdisease);\n    };\n    this.onChangeSmokingHistory = async e => {\n      await this.setState({\n        smokingHistory: e\n      });\n      console.log(this.state.smokingHistory);\n    };\n    this.onChangeBmi = async e => {\n      await this.setState({\n        bmi: e\n      });\n      console.log(this.state.bmi);\n    };\n    this.onChangeHbA1cLevel = async e => {\n      await this.setState({\n        hbA1cLevel: e\n      });\n      console.log(this.state.hbA1cLevel);\n    };\n    this.onChangeBloodGlucoseLevel = async e => {\n      await this.setState({\n        BloodGlucoseLevel: e\n      });\n      console.log(this.state.BloodGlucoseLevel);\n    };\n    // onAskQuestions = async () => {\n    //     return fetch(`${ASK_QUETIONS_URL}${this.state.currentQuestion}`, {\n    //         method: 'GET',\n    //         headers: {\n    //         'Content-Type': 'application/json',\n    //         },\n    //     }).then((response) => {\n    //         if (response.status !== 200) {\n    //             throw Error('Fail to request the answer from the server');\n    //         }\n    //         return response.json(); // Return the promise directly\n    //     }).then((result) => {\n    //         console.log(result);\n    //         this.setState({ currentAnswer: result }); // Set the result when the promise resolves\n    //         // console.log(this.state.currentAnswer);\n    //         return result; // Return the result value\n    //     });\n    // }\n    this.onAskQuestions = () => {\n      axios.get(`${ASK_QUETIONS_URL}${this.state.currentQuestion}`, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.status !== 200) {\n          throw Error('Fail to request the answer from the server');\n        }\n        console.log(response);\n        this.setState({\n          currentAnswer: response.data.text\n        }); // Set the result when the promise resolves\n        // console.log(this.state.currentAnswer);\n        return response; // Return the result value\n      });\n    };\n    this.onClickPrediction = () => {\n      var data = [[this.state.gender, this.state.age, this.state.hypentension, this.state.heartdisease, this.state.smokingHistory, this.state.bmi, this.state.hbA1cLevel, this.state.bloodGlucoseLevel]];\n      var matrix = {\n        'data': data\n      };\n      console.log(matrix);\n      console.log(JSON.stringify(matrix));\n      axios.post(`${QUOTE_MODEL_URL}`, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(matrix)\n      }).then(response => {\n        if (response.status !== 200) {\n          throw Error('Fail to request the answer from the server');\n        }\n\n        // console.log(response);\n        this.setState({\n          currentPrediction: response.data.prediction\n        }); // Set the result when the promise resolves\n        console.log(this.state.currentPrediction + text1);\n        return response; // Return the result value\n      });\n    };\n    this.onQuoteModels = async data => {\n      return fetch(`${QUOTE_MODEL_URL}`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        if (response.status !== 200) {\n          throw Error('Fail to request the prediction from the server');\n        }\n        return response.json();\n      });\n    };\n    this.state = {\n      currentQuestion: null,\n      currentQuote: null,\n      currentAnswer: \"Your answer will be displayed here\",\n      gender: 0,\n      age: 80,\n      hypentension: 0,\n      heartdisease: 1,\n      smokingHistory: 4,\n      bmi: 25.19,\n      hbA1cLevel: 6.6,\n      bloodGlucoseLevel: 140,\n      currentPrediction: null\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      children: [\"IntelliHealthPrediction\", /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: \"normal\",\n          fontSize: \"15px\"\n        },\n        children: \"Please input the following information to get a prediction of your risk of getting diabetes.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Gender\",\n          name: \"gender\",\n          rules: [{\n            required: true,\n            message: 'Please input valid numbers'\n          }],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 0,\n            onChange: this.onChangeGender,\n            precision: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Age\",\n          name: \"age\",\n          rules: [{\n            required: true,\n            message: 'Please input valid numbers'\n          }],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 0,\n            onChange: this.onChangeAge,\n            precision: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Hypertension\",\n          name: \"hypertension\",\n          rules: [{\n            required: true,\n            message: 'Please input valid numbers'\n          }],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 0,\n            onChange: this.onChangeHypentension,\n            precision: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Heart Disease\",\n          name: \"heartdisease\",\n          rules: [{\n            required: true,\n            message: 'Please input valid numbers'\n          }],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 0,\n            onChange: this.onChangeHeartdisease,\n            precision: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Smoking History\",\n          name: \"smokingHistory\",\n          rules: [{\n            required: true,\n            message: 'Please input valid numbers'\n          }],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 0,\n            onChange: this.onChangeSmokingHistory,\n            precision: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"BMI\",\n          name: \"bmi\",\n          rules: [{\n            required: true,\n            message: 'Please input valid numbers'\n          }],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 0,\n            onChange: this.onChangeBmi,\n            precision: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"HbA1c Level\",\n          name: \"hbA1cLevel\",\n          rules: [{\n            required: true,\n            message: 'Please input valid numbers'\n          }],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 0,\n            onChange: this.onChangeHbA1cLevel,\n            precision: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"Blood Glucose Level\",\n          name: \"BloodGlucoseLevel\",\n          rules: [{\n            required: true,\n            message: 'Please input valid numbers'\n          }],\n          children: /*#__PURE__*/_jsxDEV(InputNumber, {\n            min: 0,\n            onChange: this.onChangeBloodGlucoseLevel,\n            precision: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: this.onClickPrediction,\n        children: \" Get Prediction \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"Prediction: \",\n          bordered: false,\n          style: {\n            width: 800,\n            margin: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.currentPrediction.split('\\n').map((paragraph, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [paragraph, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 29\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 17\n      }, this), \"IntelliHealthBot\", /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontWeight: \"normal\",\n          fontSize: \"15px\"\n        },\n        children: \"If you have any question, feel free to ask any questions about the diabetes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n        showCount: true,\n        maxLength: 100,\n        onChange: this.onChangeQuestions,\n        style: {\n          width: 800,\n          height: 300\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: this.onClickQuetions,\n        children: \" Send it \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          title: \"ChatBot Response: \",\n          bordered: false,\n          style: {\n            width: 800,\n            margin: 20\n          },\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.currentAnswer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Physician;","map":{"version":3,"names":["React","Component","Button","Input","Card","Form","InputNumber","axios","jsxDEV","_jsxDEV","ASK_QUETIONS_URL","QUOTE_MODEL_URL","TextArea","text1","Physician","constructor","props","onClickQuetions","console","log","onAskQuestions","state","currentAnswer","onSetAnswers","response","setState","onClickModels","onQuoteModels","onChangeQuestions","e","currentQuestion","target","value","onChangeModels","currentQuote","onChangeGender","gender","onChangeAge","age","onChangeHypentension","hypentension","onChangeHeartdisease","heartdisease","onChangeSmokingHistory","smokingHistory","onChangeBmi","bmi","onChangeHbA1cLevel","hbA1cLevel","onChangeBloodGlucoseLevel","BloodGlucoseLevel","get","headers","then","status","Error","data","text","onClickPrediction","bloodGlucoseLevel","matrix","JSON","stringify","post","body","currentPrediction","prediction","fetch","method","json","render","className","style","fontWeight","children","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","Item","label","name","rules","required","message","min","onChange","precision","type","htmlType","onClick","title","bordered","width","margin","split","map","paragraph","index","Fragment","showCount","maxLength","height"],"sources":["/Users/kangwang/Documents/GitHub/IntelliHealth/IntelliHealthApp/IntelliHealthReact/intellihealthfrontend/src/components/Physician.js"],"sourcesContent":["import React, {Component} from 'react';\nimport { Button, Input, Card, Form, InputNumber} from 'antd';\nimport axios from 'axios';\n\nconst ASK_QUETIONS_URL = 'http://127.0.0.1:5000/api/v1/chat/'\nconst QUOTE_MODEL_URL = 'http://127.0.0.1:5000/api/v1/model/prediction'\nconst { TextArea } = Input;\nlet text1 = \"sea\";\nclass Physician extends Component {\n    constructor(props) {\n        super(props);\n        // define state for the components states\n        this.state = {\n            currentQuestion: null,\n            currentQuote: null,\n            currentAnswer: \"Your answer will be displayed here\",\n            gender: 0,\n            age: 80,\n            hypentension: 0,\n            heartdisease: 1,\n            smokingHistory: 4,\n            bmi: 25.19,\n            hbA1cLevel: 6.6,\n            bloodGlucoseLevel: 140,\n            currentPrediction: null,\n        }\n    }\n\n    onClickQuetions = async () => {\n        console.log(\"clicked ask quetions\");\n\n        // const response = await this.onAskQuestions();\n        // // console.log(response);\n        // this.setState({ currentAnswer: response });\n        // console.log(this.state.currentAnswer);\n        // // console.log(this.state.currentAnswer.created)\n\n        await this.onAskQuestions();\n        console.log(this.state.currentAnswer);\n    }\n\n    onSetAnswers = async (response) => {\n        await this.setState({ currentAnswer : response });\n        console.log(this.state.currentAnswer);\n    }\n\n    onClickModels = async () => {\n        console.log(\"clicked quote models\");\n\n        const response = await this.onQuoteModels();\n        console.log(response);\n    }\n\n    onChangeQuestions = async (e) => {\n        await this.setState({ currentQuestion : e.target.value });\n        console.log(this.state.currentQuestion);\n    }\n\n    onChangeModels = async e => {\n        await this.setState({ currentQuote : e.target.value });\n        console.log(this.state.currentQuote);\n    }\n\n    onChangeGender = async (e) => {\n        await this.setState({ gender : e });\n        console.log(this.state.gender);\n    }\n\n    onChangeAge = async e => {\n        await this.setState({ age : e});\n        console.log(this.state.age);\n    }\n\n    onChangeHypentension = async e => {\n        await this.setState({ hypentension : e });\n        console.log(this.state.hypentension);\n    }\n\n    onChangeHeartdisease = async e => {\n        await this.setState({ heartdisease : e });\n        console.log(this.state.heartdisease);\n    }\n\n    onChangeSmokingHistory = async e => {\n        await this.setState({ smokingHistory : e });\n        console.log(this.state.smokingHistory);\n    }\n\n    onChangeBmi = async e => {\n        await this.setState({ bmi : e });\n        console.log(this.state.bmi);\n    }\n\n    onChangeHbA1cLevel = async e => {\n        await this.setState({ hbA1cLevel : e });\n        console.log(this.state.hbA1cLevel);\n    }\n\n    onChangeBloodGlucoseLevel = async e => {\n        await this.setState({ BloodGlucoseLevel : e });\n        console.log(this.state.BloodGlucoseLevel);\n    }\n\n    // onAskQuestions = async () => {\n    //     return fetch(`${ASK_QUETIONS_URL}${this.state.currentQuestion}`, {\n    //         method: 'GET',\n    //         headers: {\n    //         'Content-Type': 'application/json',\n    //         },\n    //     }).then((response) => {\n    //         if (response.status !== 200) {\n    //             throw Error('Fail to request the answer from the server');\n    //         }\n\n    //         return response.json(); // Return the promise directly\n    //     }).then((result) => {\n    //         console.log(result);\n    //         this.setState({ currentAnswer: result }); // Set the result when the promise resolves\n    //         // console.log(this.state.currentAnswer);\n    //         return result; // Return the result value\n    //     });\n    // }\n\n    onAskQuestions = () => {\n        axios.get(`${ASK_QUETIONS_URL}${this.state.currentQuestion}`, {\n            headers: {\n            'Content-Type': 'application/json',\n            },\n        }).then((response) => {\n            if (response.status !== 200) {\n                throw Error('Fail to request the answer from the server');\n            }\n\n            \n            console.log(response);\n            this.setState({ currentAnswer: response.data.text}); // Set the result when the promise resolves\n            // console.log(this.state.currentAnswer);\n            return response; // Return the result value\n        });\n    }\n\n    onClickPrediction = () => {\n        var data = [[this.state.gender, this.state.age, this.state.hypentension, this.state.heartdisease, this.state.smokingHistory, this.state.bmi, this.state.hbA1cLevel, this.state.bloodGlucoseLevel]]\n        var matrix = { 'data': data }\n        console.log(matrix);\n        console.log(JSON.stringify(matrix));\n        axios.post(`${QUOTE_MODEL_URL}`, {\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(matrix)\n        }).then((response) => {\n            if (response.status !== 200) {\n                throw Error('Fail to request the answer from the server');\n            }\n\n            \n            // console.log(response);\n            this.setState({ currentPrediction: response.data.prediction}); // Set the result when the promise resolves\n            console.log(this.state.currentPrediction+text1);\n            return response; // Return the result value\n        });\n    }\n\n    onQuoteModels = async (data) => {\n        return fetch(`${QUOTE_MODEL_URL}`, {\n            method: 'post',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n        }).then((response) => {\n            if (response.status !== 200) {\n                throw Error('Fail to request the prediction from the server');\n            }\n\n            return response.json();\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Main\" style={{fontWeight: \"bold\"}}>\n                IntelliHealthPrediction\n                <p style={{fontWeight: \"normal\", fontSize: \"15px\"}}>\n                    Please input the following information to get a prediction of your risk of getting diabetes.\n                </p>\n\n                <Form >\n                    <Form.Item label=\"Gender\" name=\"gender\" rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                        <InputNumber min={0} onChange={this.onChangeGender} precision={2}/>\n                        {/* <Input onChange={this.onChangeAreaCode}/> */}\n                    </Form.Item>\n                    <Form.Item label=\"Age\" name=\"age\" rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                        <InputNumber min={0} onChange={this.onChangeAge} precision={2}/>\n                        {/* <Input onChange={this.onChangeSevenDigits}/> */}\n                    </Form.Item>\n                    <Form.Item label=\"Hypertension\" name=\"hypertension\" rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                        <InputNumber min={0} onChange={this.onChangeHypentension} precision={2}/>\n                    </Form.Item>\n                    <Form.Item label=\"Heart Disease\" name=\"heartdisease\" rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                        <InputNumber min={0} onChange={this.onChangeHeartdisease} precision={2}/>\n                    </Form.Item>\n                    <Form.Item label=\"Smoking History\" name=\"smokingHistory\" rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                        <InputNumber min={0} onChange={this.onChangeSmokingHistory} precision={2}/>\n                    </Form.Item>\n                    <Form.Item label=\"BMI\" name=\"bmi\" rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                        <InputNumber min={0} onChange={this.onChangeBmi} precision={2}/>\n                    </Form.Item>\n                    <Form.Item label=\"HbA1c Level\" name=\"hbA1cLevel\" rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                        <InputNumber min={0} onChange={this.onChangeHbA1cLevel} precision={2}/>\n                    </Form.Item>\n                    <Form.Item label=\"Blood Glucose Level\" name=\"BloodGlucoseLevel\" rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                        <InputNumber min={0} onChange={this.onChangeBloodGlucoseLevel} precision={2}/>\n                    </Form.Item>\n                    \n                </Form> \n\n                <Button  type=\"primary\" htmlType=\"submit\" onClick={this.onClickPrediction}> Get Prediction </Button>\n\n\n\n                <div>\n                    <Card title=\"Prediction: \" bordered={false} style={{ width: 800, margin: 20}}>\n                    <p>\n                        {this.state.currentPrediction.split('\\n').map((paragraph, index) => (\n                            <React.Fragment key={index}>\n                            {paragraph}\n                            <br />\n                            </React.Fragment>\n                        ))}\n                        </p>\n                    </Card>\n\n                </div>\n\n                IntelliHealthBot\n                <p style={{fontWeight: \"normal\", fontSize: \"15px\"}}>\n                    If you have any question, feel free to ask any questions about the diabetes\n                </p>\n\n\n                <TextArea showCount maxLength={100} onChange={this.onChangeQuestions} style={{ width: 800, height: 300 }} />\n                <p>\n\n                </p>\n\n                <Button type=\"primary\" htmlType=\"submit\" onClick={this.onClickQuetions}> Send it </Button>\n\n                <p>\n\n                </p>\n\n                <div>\n                    <Card title=\"ChatBot Response: \" bordered={false} style={{ width: 800, margin: 20 }}>\n                        <p >\n                            {this.state.currentAnswer}\n                        </p>\n                    </Card>\n\n                </div>\n\n\n\n            </div>\n        );\n    }\n}\nexport default Physician;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}