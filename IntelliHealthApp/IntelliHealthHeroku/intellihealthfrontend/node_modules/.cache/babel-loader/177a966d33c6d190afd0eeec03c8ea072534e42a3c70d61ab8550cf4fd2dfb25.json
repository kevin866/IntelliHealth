{"ast":null,"code":"var _jsxFileName = \"/Users/kangwang/Documents/GitHub/IntelliHealth/IntelliHealthApp/IntelliHealthReact/intellihealthfrontend/src/components/Physician.js\";\n// import React, { useState } from 'react';\n// import '../styles/SelectionButton.css'; \n\n// const SelectionButton = () => {\n// const [isSelected1, setIsSelected1] = useState(false);\n// const [isSelected2, setIsSelected2] = useState(false);\n\n// const handleClick1 = () => {\n// setIsSelected1(!isSelected1);\n// };\n// const handleClick2 = () => {\n// setIsSelected2(!isSelected2);\n// };\n\n//   return (\n//     <div>\n//         <button\n//             onClick={handleClick1}\n//             className={`selection-button ${isSelected1 ? 'selected' : ''}`}\n//             >\n//             {isSelected1 ? 'Male' : 'Male'}\n//         </button>\n//         <button\n//             onClick={handleClick2}\n//             className={`selection-button ${isSelected2 ? 'selected' : ''}`}\n//             >\n//             {isSelected2 ? 'Female' : 'Female'}\n//         </button>\n\n//     </div>\n\n//   );\n// };\n\n// export default SelectionButton;\n\nimport React, { Component } from 'react';\nimport { Button, Input, Card, Form, InputNumber, Tabs, Col, Row } from 'antd';\nimport axios from 'axios';\nimport SelectionButton from './SelectionButton'; // Import the SelectionButton component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ASK_QUETIONS_URL = 'http://127.0.0.1:5000/api/v1/chat/';\nconst QUOTE_MODEL_URL = 'http://127.0.0.1:5000/api/v1/model/prediction';\nconst {\n  TextArea\n} = Input;\nlet text1 = \"sea\";\nclass Physician extends Component {\n  constructor(props) {\n    super(props);\n    // define state for the components states\n    this.onClickExample1 = async () => {\n      console.log(\"clicked example 1\");\n      await this.setState({\n        gender: 0\n      });\n      this.formRef.current.setFieldsValue({\n        gender: 0\n      });\n      await this.setState({\n        age: 80\n      });\n      this.formRef.current.setFieldsValue({\n        age: 80\n      });\n      await this.setState({\n        hypertension: 0\n      });\n      this.formRef.current.setFieldsValue({\n        hypertension: 0\n      });\n      await this.setState({\n        heartdisease: 1\n      });\n      this.formRef.current.setFieldsValue({\n        heartdisease: 1\n      });\n      await this.setState({\n        smokingHistory: 4\n      });\n      this.formRef.current.setFieldsValue({\n        smokingHistory: 4\n      });\n      await this.setState({\n        bmi: 25.19\n      });\n      this.formRef.current.setFieldsValue({\n        bmi: 25.19\n      });\n      await this.setState({\n        hbA1cLevel: 6.6\n      });\n      this.formRef.current.setFieldsValue({\n        hbA1cLevel: 6.6\n      });\n      await this.setState({\n        bloodGlucoseLevel: 140\n      });\n      this.formRef.current.setFieldsValue({\n        bloodGlucoseLevel: 140\n      });\n      console.log(\"Data set to example 1\");\n      // console.log(this.state.gender);\n    };\n    this.onClickExample2 = async () => {\n      console.log(\"clicked example 2\");\n      await this.setState({\n        gender: 1\n      });\n      this.formRef.current.setFieldsValue({\n        gender: 1\n      });\n      await this.setState({\n        age: 90\n      });\n      this.formRef.current.setFieldsValue({\n        age: 90\n      });\n      await this.setState({\n        hypertension: 1\n      });\n      this.formRef.current.setFieldsValue({\n        hypertension: 1\n      });\n      await this.setState({\n        heartdisease: 1\n      });\n      this.formRef.current.setFieldsValue({\n        heartdisease: 1\n      });\n      await this.setState({\n        smokingHistory: 12\n      });\n      this.formRef.current.setFieldsValue({\n        smokingHistory: 12\n      });\n      await this.setState({\n        bmi: 40\n      });\n      this.formRef.current.setFieldsValue({\n        bmi: 40\n      });\n      await this.setState({\n        hbA1cLevel: 10\n      });\n      this.formRef.current.setFieldsValue({\n        hbA1cLevel: 10\n      });\n      await this.setState({\n        bloodGlucoseLevel: 260\n      });\n      this.formRef.current.setFieldsValue({\n        bloodGlucoseLevel: 260\n      });\n      console.log(\"Data set to example 2\");\n      // console.log(this.state.gender);\n    };\n    this.onClickhypertension1 = () => {\n      this.setState(prevState => ({\n        hyperisSelected1: !prevState.hyperisSelected1,\n        hypertension: 0\n      }));\n      this.formRef.current.setFieldsValue({\n        hypertension: 0\n      });\n    };\n    this.onClickhypertension2 = () => {\n      this.setState(prevState => ({\n        hyperisSelected2: !prevState.hyperisSelected2,\n        hypertension: 1\n      }));\n      this.formRef.current.setFieldsValue({\n        hypertension: 1\n      });\n    };\n    this.onClickheartdis2 = () => {\n      this.setState(prevState => ({\n        hedisisSelected2: !prevState.hedisisSelected2,\n        heartdisease: 1\n      }));\n      this.formRef.current.setFieldsValue({\n        heartdisease: 1\n      });\n    };\n    this.onClickheartdis1 = () => {\n      this.setState(prevState => ({\n        hedisisSelected1: !prevState.hedisisSelected1,\n        heartdisease: 0\n      }));\n      this.formRef.current.setFieldsValue({\n        heartdisease: 0\n      });\n    };\n    this.onClickFemale = () => {\n      this.setState(prevState => ({\n        femaleisSelected2: !prevState.femaleisSelected2,\n        gender: 1\n      }));\n      this.formRef.current.setFieldsValue({\n        gender: 1\n      });\n    };\n    this.onClickMale = () => {\n      this.setState(prevState => ({\n        maleisSelected1: !prevState.maleisSelected1,\n        gender: 0\n      }));\n      this.formRef.current.setFieldsValue({\n        gender: 0\n      });\n    };\n    this.onClickQuetions = async () => {\n      console.log(\"clicked ask quetions\");\n\n      // const response = await this.onAskQuestions();\n      // // console.log(response);\n      // this.setState({ currentAnswer: response });\n      // console.log(this.state.currentAnswer);\n      // // console.log(this.state.currentAnswer.created)\n\n      await this.onAskQuestions();\n      console.log(this.state.currentAnswer);\n    };\n    this.onSetAnswers = async response => {\n      await this.setState({\n        currentAnswer: response\n      });\n      console.log(this.state.currentAnswer);\n    };\n    this.onClickModels = async () => {\n      console.log(\"clicked quote models\");\n      const response = await this.onQuoteModels();\n      console.log(response);\n    };\n    this.onChangeQuestions = async e => {\n      await this.setState({\n        currentQuestion: e.target.value\n      });\n      console.log(this.state.currentQuestion);\n    };\n    this.onChangeModels = async e => {\n      await this.setState({\n        currentQuote: e.target.value\n      });\n      console.log(this.state.currentQuote);\n    };\n    this.onChangeGender = async e => {\n      await this.setState({\n        gender: e\n      });\n      console.log(this.state.gender);\n    };\n    this.onChangeAge = async e => {\n      await this.setState({\n        age: e\n      });\n      console.log(this.state.age);\n    };\n    this.onChangeHypertension = async e => {\n      await this.setState({\n        hypertension: e\n      });\n      console.log(this.state.hypertension);\n    };\n    this.onChangeHeartdisease = async e => {\n      await this.setState({\n        heartdisease: e\n      });\n      console.log(this.state.heartdisease);\n    };\n    this.onChangeSmokingHistory = async e => {\n      await this.setState({\n        smokingHistory: e\n      });\n      console.log(this.state.smokingHistory);\n    };\n    this.onChangeBmi = async e => {\n      await this.setState({\n        bmi: e\n      });\n      console.log(this.state.bmi);\n    };\n    this.onChangeHbA1cLevel = async e => {\n      await this.setState({\n        hbA1cLevel: e\n      });\n      console.log(this.state.hbA1cLevel);\n    };\n    this.onChangeBloodGlucoseLevel = async e => {\n      await this.setState({\n        BloodGlucoseLevel: e\n      });\n      console.log(this.state.BloodGlucoseLevel);\n    };\n    // onAskQuestions = async () => {\n    //     return fetch(`${ASK_QUETIONS_URL}${this.state.currentQuestion}`, {\n    //         method: 'GET',\n    //         headers: {\n    //         'Content-Type': 'application/json',\n    //         },\n    //     }).then((response) => {\n    //         if (response.status !== 200) {\n    //             throw Error('Fail to request the answer from the server');\n    //         }\n    //         return response.json(); // Return the promise directly\n    //     }).then((result) => {\n    //         console.log(result);\n    //         this.setState({ currentAnswer: result }); // Set the result when the promise resolves\n    //         // console.log(this.state.currentAnswer);\n    //         return result; // Return the result value\n    //     });\n    // }\n    this.onAskQuestions = () => {\n      axios.get(`${ASK_QUETIONS_URL}${this.state.currentQuestion}`, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.status !== 200) {\n          throw Error('Fail to request the answer from the server');\n        }\n        console.log(response);\n        this.setState({\n          currentAnswer: response.data.text\n        }); // Set the result when the promise resolves\n        // console.log(this.state.currentAnswer);\n        return response; // Return the result value\n      });\n    };\n    this.onClickPrediction = () => {\n      var data = [[this.state.gender, this.state.age, this.state.hypertension, this.state.heartdisease, this.state.smokingHistory, this.state.bmi, this.state.hbA1cLevel, this.state.bloodGlucoseLevel]];\n      var matrix = {\n        'data': data\n      };\n      console.log(matrix);\n      console.log(JSON.stringify(matrix));\n      axios.post(`${QUOTE_MODEL_URL}`, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(matrix)\n      }).then(response => {\n        if (response.status !== 200) {\n          throw Error('Fail to request the answer from the server');\n        }\n\n        // console.log(response);\n        this.setState({\n          currentPrediction: response.data.prediction\n        }); // Set the result when the promise resolves\n        console.log(this.state.currentPrediction + text1);\n        return response; // Return the result value\n      });\n    };\n    this.onQuoteModels = async data => {\n      return fetch(`${QUOTE_MODEL_URL}`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        if (response.status !== 200) {\n          throw Error('Fail to request the prediction from the server');\n        }\n        return response.json();\n      });\n    };\n    this.state = {\n      currentQuestion: null,\n      currentQuote: null,\n      currentAnswer: \"Your answer will be displayed here\",\n      gender: 0,\n      age: 80,\n      hypertension: 0,\n      heartdisease: 1,\n      smokingHistory: 4,\n      bmi: 25.19,\n      hbA1cLevel: 6.6,\n      bloodGlucoseLevel: 140,\n      currentPrediction: \"Your prediction will be displayed here\",\n      maleisSelected1: false,\n      femaleisSelected2: false,\n      hyperisSelected1: false,\n      hyperisSelected2: false,\n      hedisisSelected1: false,\n      hedisisSelected2: false\n    };\n    this.formRef = /*#__PURE__*/React.createRef();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"prediction\",\n        children: [/*#__PURE__*/_jsxDEV(Tabs.TabPane, {\n          tab: \"Prediction\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"larger-text\",\n            children: \"IntelliHealth Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: \"normal\",\n              fontSize: \"15px\"\n            },\n            children: \"Please input the following information to get a prediction of your risk of getting diabetes.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            ref: this.formRef,\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              gutter: [16, 0],\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Gender\",\n                  name: \"gender\",\n                  rules: [{\n                    required: true,\n                    message: 'Please select an option',\n                    validator: (_, value) => value ? Promise.resolve() : Promise.reject('Please select an option')\n                  }],\n                  labelAlign: \"left\",\n                  wrapperCol: {\n                    span: 24\n                  } // Adjust the span value to control the width of the buttons container\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(SelectionButton, {\n                    isSelected: this.state.maleisSelected1,\n                    onSelect: this.onClickMale,\n                    label: \"Male\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(SelectionButton, {\n                    isSelected: this.state.femaleisSelected2,\n                    onSelect: this.onClickFemale,\n                    label: \"Female\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Heart Disease\",\n                  name: \"heartdisease\",\n                  rules: [{\n                    required: true,\n                    message: 'Please select an option',\n                    validator: (_, value) => value ? Promise.resolve() : Promise.reject('Please select an option')\n                  }],\n                  labelAlign: \"left\",\n                  wrapperCol: {\n                    span: 16\n                  } // Adjust the span value to control the width of the buttons container\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(SelectionButton, {\n                    isSelected: this.state.hedisisSelected1,\n                    onSelect: this.onClickheartdis1,\n                    label: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(SelectionButton, {\n                    isSelected: this.state.hedisisSelected2,\n                    onSelect: this.onClickheartdis2,\n                    label: \"Yes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              gutter: [16, 0],\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Hypertension\",\n                  name: \"hypertension\",\n                  rules: [{\n                    required: true,\n                    message: 'Please select an option',\n                    validator: (_, value) => value ? Promise.resolve() : Promise.reject('Please select an option')\n                  }],\n                  labelAlign: \"left\",\n                  wrapperCol: {\n                    span: 17\n                  } // Adjust the span value to control the width of the buttons container\n                  ,\n                  children: [/*#__PURE__*/_jsxDEV(SelectionButton, {\n                    isSelected: this.state.hyperisSelected2,\n                    onSelect: this.onClickhypertension2,\n                    label: \"Yes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(SelectionButton, {\n                    isSelected: this.state.hyperisSelected1,\n                    onSelect: this.onClickhypertension1,\n                    label: \"No\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 459,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 439,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Age (years)\",\n                  name: \"age\",\n                  initialValue: 80,\n                  rules: [{\n                    required: true,\n                    message: 'Please select an option',\n                    validator: (_, value) => value ? Promise.resolve() : Promise.reject('Please select an option')\n                  }],\n                  labelAlign: \"left\",\n                  wrapperCol: {\n                    span: 24\n                  },\n                  children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                    min: 0,\n                    max: 100,\n                    onChange: this.onChangeAge,\n                    precision: 0\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              gutter: [16, 0],\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Smoking History (years)\",\n                  name: \"smokingHistory\",\n                  initialValue: 4,\n                  rules: [{\n                    required: true,\n                    message: 'Please select an option',\n                    validator: (_, value) => value ? Promise.resolve() : Promise.reject('Please select an option')\n                  }],\n                  labelAlign: \"left\",\n                  wrapperCol: {\n                    span: 8\n                  },\n                  children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                    min: 0,\n                    max: 100,\n                    onChange: this.onChangeSmokingHistory,\n                    precision: 2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 36\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 483,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"BMI (kg/m2)\",\n                  name: \"bmi\",\n                  initialValue: 25.19,\n                  rules: [{\n                    required: true,\n                    message: 'Please select an option',\n                    validator: (_, value) => value ? Promise.resolve() : Promise.reject('Please select an option')\n                  }],\n                  labelAlign: \"left\",\n                  wrapperCol: {\n                    span: 29\n                  },\n                  children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                    min: 0,\n                    max: 100,\n                    onChange: this.onChangeBmi,\n                    precision: 2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 496,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 481,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              gutter: [16, 0],\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"HbA1c Level\",\n                  name: \"hbA1cLevel\",\n                  initialValue: 6.6,\n                  rules: [{\n                    required: true,\n                    message: 'Please input valid numbers'\n                  }],\n                  labelAlign: \"left\",\n                  wrapperCol: {\n                    span: 19\n                  },\n                  children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                    min: 0,\n                    max: 100,\n                    onChange: this.onChangeHbA1cLevel,\n                    precision: 2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(Form.Item, {\n                  label: \"Blood Glucose Level (mg/dL)\",\n                  name: \"bloodGlucoseLevel\",\n                  initialValue: 140,\n                  rules: [{\n                    required: true,\n                    message: 'Please input valid numbers'\n                  }],\n                  labelAlign: \"left\",\n                  wrapperCol: {\n                    span: 1\n                  },\n                  children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                    min: 0,\n                    max: 600,\n                    onChange: this.onChangeBloodGlucoseLevel,\n                    precision: 2\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            onClick: this.onClickExample1,\n            style: {\n              margin: 20\n            },\n            children: \" Example 1 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            onClick: this.onClickExample2,\n            style: {\n              margin: 20\n            },\n            children: \" Example 2 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            onClick: this.onClickPrediction,\n            children: \" Get Prediction \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Prediction: \",\n              bordered: false,\n              style: {\n                width: 800,\n                margin: 20\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: this.state.currentPrediction !== null ? this.state.currentPrediction.split('\\n').map((paragraph, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [index > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginLeft: '20px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 47\n                  }, this), paragraph, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 542,\n                    columnNumber: 33\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 29\n                }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"No prediction available.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this)]\n        }, \"prediction\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.TabPane, {\n          tab: \"Chatbot\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"larger-text\",\n            children: \"IntelliHealth Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: \"normal\",\n              fontSize: \"15px\"\n            },\n            children: \"If you have any question, feel free to ask any questions about the diabetes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            showCount: true,\n            maxLength: 100,\n            onChange: this.onChangeQuestions,\n            style: {\n              width: 800,\n              height: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            onClick: this.onClickQuetions,\n            children: \" Send it \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 570,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"ChatBot Response: \",\n              bordered: false,\n              style: {\n                width: 800,\n                margin: 20\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: this.state.currentAnswer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 25\n          }, this)]\n        }, \"chatbot\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Physician;","map":{"version":3,"names":["React","Component","Button","Input","Card","Form","InputNumber","Tabs","Col","Row","axios","SelectionButton","jsxDEV","_jsxDEV","ASK_QUETIONS_URL","QUOTE_MODEL_URL","TextArea","text1","Physician","constructor","props","onClickExample1","console","log","setState","gender","formRef","current","setFieldsValue","age","hypertension","heartdisease","smokingHistory","bmi","hbA1cLevel","bloodGlucoseLevel","onClickExample2","onClickhypertension1","prevState","hyperisSelected1","onClickhypertension2","hyperisSelected2","onClickheartdis2","hedisisSelected2","onClickheartdis1","hedisisSelected1","onClickFemale","femaleisSelected2","onClickMale","maleisSelected1","onClickQuetions","onAskQuestions","state","currentAnswer","onSetAnswers","response","onClickModels","onQuoteModels","onChangeQuestions","e","currentQuestion","target","value","onChangeModels","currentQuote","onChangeGender","onChangeAge","onChangeHypertension","onChangeHeartdisease","onChangeSmokingHistory","onChangeBmi","onChangeHbA1cLevel","onChangeBloodGlucoseLevel","BloodGlucoseLevel","get","headers","then","status","Error","data","text","onClickPrediction","matrix","JSON","stringify","post","body","currentPrediction","prediction","fetch","method","json","createRef","render","className","style","fontWeight","children","defaultActiveKey","TabPane","tab","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","ref","gutter","span","Item","label","name","rules","required","message","validator","_","Promise","resolve","reject","labelAlign","wrapperCol","isSelected","onSelect","initialValue","min","max","onChange","precision","type","htmlType","onClick","margin","title","bordered","width","textAlign","split","map","paragraph","index","Fragment","marginLeft","showCount","maxLength","height"],"sources":["/Users/kangwang/Documents/GitHub/IntelliHealth/IntelliHealthApp/IntelliHealthReact/intellihealthfrontend/src/components/Physician.js"],"sourcesContent":["\n\n// import React, { useState } from 'react';\n// import '../styles/SelectionButton.css'; \n\n// const SelectionButton = () => {\n// const [isSelected1, setIsSelected1] = useState(false);\n// const [isSelected2, setIsSelected2] = useState(false);\n\n// const handleClick1 = () => {\n// setIsSelected1(!isSelected1);\n// };\n// const handleClick2 = () => {\n// setIsSelected2(!isSelected2);\n// };\n\n//   return (\n//     <div>\n//         <button\n//             onClick={handleClick1}\n//             className={`selection-button ${isSelected1 ? 'selected' : ''}`}\n//             >\n//             {isSelected1 ? 'Male' : 'Male'}\n//         </button>\n//         <button\n//             onClick={handleClick2}\n//             className={`selection-button ${isSelected2 ? 'selected' : ''}`}\n//             >\n//             {isSelected2 ? 'Female' : 'Female'}\n//         </button>\n\n//     </div>\n    \n//   );\n// };\n\n// export default SelectionButton;\n\n\n\n\nimport React, { Component } from 'react';\nimport { Button, Input, Card, Form, InputNumber, Tabs, Col, Row} from 'antd';\nimport axios from 'axios';\nimport SelectionButton from './SelectionButton'; // Import the SelectionButton component\n\n\n\n\nconst ASK_QUETIONS_URL = 'http://127.0.0.1:5000/api/v1/chat/'\nconst QUOTE_MODEL_URL = 'http://127.0.0.1:5000/api/v1/model/prediction'\nconst { TextArea } = Input;\nlet text1 = \"sea\";\nclass Physician extends Component {\n    constructor(props) {\n        super(props);\n        // define state for the components states\n        this.state = {\n            currentQuestion: null,\n            currentQuote: null,\n            currentAnswer: \"Your answer will be displayed here\",\n            gender: 0,\n            age: 80,\n            hypertension: 0,\n            heartdisease: 1,\n            smokingHistory: 4,\n            bmi: 25.19,\n            hbA1cLevel: 6.6,\n            bloodGlucoseLevel: 140,\n            currentPrediction: \"Your prediction will be displayed here\",\n            maleisSelected1: false,\n            femaleisSelected2: false,\n            hyperisSelected1: false,\n            hyperisSelected2: false,\n            hedisisSelected1:false,\n            hedisisSelected2:false\n        }\n        this.formRef = React.createRef();\n    }\n\n\n    onClickExample1 = async () => {\n        console.log(\"clicked example 1\");\n        await this.setState({ gender: 0 });\n        this.formRef.current.setFieldsValue({\n            gender: 0,\n        });\n        \n        await this.setState({ age: 80 });\n        this.formRef.current.setFieldsValue({\n            age: 80,\n        });\n        await this.setState({ hypertension: 0 });\n        this.formRef.current.setFieldsValue({\n            hypertension: 0,\n        });\n        await this.setState({ heartdisease: 1 });\n        this.formRef.current.setFieldsValue({\n            heartdisease: 1,\n        });\n        await this.setState({ smokingHistory: 4 });\n        this.formRef.current.setFieldsValue({\n            smokingHistory: 4,\n        });\n        await this.setState({ bmi: 25.19 });\n        this.formRef.current.setFieldsValue({\n            bmi: 25.19,\n        });\n        await this.setState({ hbA1cLevel: 6.6 });\n        this.formRef.current.setFieldsValue({\n            hbA1cLevel: 6.6,\n        });\n        await this.setState({ bloodGlucoseLevel: 140 });\n        this.formRef.current.setFieldsValue({\n            bloodGlucoseLevel: 140,\n        });\n        console.log(\"Data set to example 1\");\n        // console.log(this.state.gender);\n    }\n\n    onClickExample2 = async () => {\n        console.log(\"clicked example 2\");\n        await this.setState({ gender: 1 });\n        this.formRef.current.setFieldsValue({\n            gender: 1,\n        });\n        await this.setState({ age: 90 });\n        this.formRef.current.setFieldsValue({\n            age: 90,\n        });\n        await this.setState({ hypertension: 1 });\n        this.formRef.current.setFieldsValue({\n            hypertension: 1,\n        });\n        await this.setState({ heartdisease: 1 });\n        this.formRef.current.setFieldsValue({\n            heartdisease: 1,\n        });\n        await this.setState({ smokingHistory: 12 });\n        this.formRef.current.setFieldsValue({\n            smokingHistory: 12,\n        });\n        await this.setState({ bmi: 40 });\n        this.formRef.current.setFieldsValue({\n            bmi: 40,\n        });\n        await this.setState({ hbA1cLevel: 10 });\n        this.formRef.current.setFieldsValue({\n            hbA1cLevel: 10,\n        });\n        await this.setState({ bloodGlucoseLevel: 260 });\n        this.formRef.current.setFieldsValue({\n            bloodGlucoseLevel: 260,\n        });\n        console.log(\"Data set to example 2\");\n        // console.log(this.state.gender);\n    }\n\n    onClickhypertension1 = () => {\n        this.setState((prevState) => ({\n            hyperisSelected1: !prevState.hyperisSelected1,\n            hypertension: 0,\n        }));\n        this.formRef.current.setFieldsValue({\n          hypertension: 0,\n        });\n      };\n    \n    onClickhypertension2 = () => {\n        this.setState((prevState) => ({\n            hyperisSelected2: !prevState.hyperisSelected2,\n            hypertension: 1,\n        }));\n        this.formRef.current.setFieldsValue({\n            hypertension: 1,\n        });\n    };\n    onClickheartdis2 = () => {\n        this.setState((prevState) => ({\n            hedisisSelected2: !prevState.hedisisSelected2,\n            heartdisease: 1,\n        }));\n        this.formRef.current.setFieldsValue({\n            heartdisease: 1,\n        });\n    };\n\n    onClickheartdis1 = () => {\n        this.setState((prevState) => ({\n            hedisisSelected1: !prevState.hedisisSelected1,\n            heartdisease: 0,\n        }));\n        this.formRef.current.setFieldsValue({\n            heartdisease: 0,\n        });\n    };\n    \n    onClickFemale = () => {\n        this.setState((prevState) => ({\n          femaleisSelected2: !prevState.femaleisSelected2,\n          gender: 1,\n        }));\n        this.formRef.current.setFieldsValue({\n          gender: 1,\n        });\n      };\n    \n    onClickMale = () => {\n        this.setState((prevState) => ({\n            maleisSelected1: !prevState.maleisSelected1,\n            gender: 0,\n        }));\n        this.formRef.current.setFieldsValue({\n            gender: 0,\n        });\n      };\n\n    onClickQuetions = async () => {\n        console.log(\"clicked ask quetions\");\n\n        // const response = await this.onAskQuestions();\n        // // console.log(response);\n        // this.setState({ currentAnswer: response });\n        // console.log(this.state.currentAnswer);\n        // // console.log(this.state.currentAnswer.created)\n\n        await this.onAskQuestions();\n        console.log(this.state.currentAnswer);\n    }\n\n    onSetAnswers = async (response) => {\n        await this.setState({ currentAnswer : response });\n        console.log(this.state.currentAnswer);\n    }\n\n    onClickModels = async () => {\n        console.log(\"clicked quote models\");\n\n        const response = await this.onQuoteModels();\n        console.log(response);\n    }\n\n    onChangeQuestions = async (e) => {\n        await this.setState({ currentQuestion : e.target.value });\n        console.log(this.state.currentQuestion);\n    }\n\n    onChangeModels = async e => {\n        await this.setState({ currentQuote : e.target.value });\n        console.log(this.state.currentQuote);\n    }\n\n    onChangeGender = async (e) => {\n        await this.setState({ gender : e });\n        console.log(this.state.gender);\n    }\n\n    onChangeAge = async e => {\n        await this.setState({ age : e});\n        console.log(this.state.age);\n    }\n\n    onChangeHypertension = async e => {\n        await this.setState({ hypertension : e });\n        console.log(this.state.hypertension);\n    }\n\n    onChangeHeartdisease = async e => {\n        await this.setState({ heartdisease : e });\n        console.log(this.state.heartdisease);\n    }\n\n    onChangeSmokingHistory = async e => {\n        await this.setState({ smokingHistory : e });\n        console.log(this.state.smokingHistory);\n    }\n\n    onChangeBmi = async e => {\n        await this.setState({ bmi : e });\n        console.log(this.state.bmi);\n    }\n\n    onChangeHbA1cLevel = async e => {\n        await this.setState({ hbA1cLevel : e });\n        console.log(this.state.hbA1cLevel);\n    }\n\n    onChangeBloodGlucoseLevel = async e => {\n        await this.setState({ BloodGlucoseLevel : e });\n        console.log(this.state.BloodGlucoseLevel);\n    }\n\n    // onAskQuestions = async () => {\n    //     return fetch(`${ASK_QUETIONS_URL}${this.state.currentQuestion}`, {\n    //         method: 'GET',\n    //         headers: {\n    //         'Content-Type': 'application/json',\n    //         },\n    //     }).then((response) => {\n    //         if (response.status !== 200) {\n    //             throw Error('Fail to request the answer from the server');\n    //         }\n\n    //         return response.json(); // Return the promise directly\n    //     }).then((result) => {\n    //         console.log(result);\n    //         this.setState({ currentAnswer: result }); // Set the result when the promise resolves\n    //         // console.log(this.state.currentAnswer);\n    //         return result; // Return the result value\n    //     });\n    // }\n\n    onAskQuestions = () => {\n        axios.get(`${ASK_QUETIONS_URL}${this.state.currentQuestion}`, {\n            headers: {\n            'Content-Type': 'application/json',\n            },\n        }).then((response) => {\n            if (response.status !== 200) {\n                throw Error('Fail to request the answer from the server');\n            }\n\n            \n            console.log(response);\n            this.setState({ currentAnswer: response.data.text}); // Set the result when the promise resolves\n            // console.log(this.state.currentAnswer);\n            return response; // Return the result value\n        });\n    }\n\n    onClickPrediction = () => {\n        var data = [[this.state.gender, this.state.age, this.state.hypertension, this.state.heartdisease, this.state.smokingHistory, this.state.bmi, this.state.hbA1cLevel, this.state.bloodGlucoseLevel]]\n        var matrix = { 'data': data }\n        console.log(matrix);\n        console.log(JSON.stringify(matrix));\n        axios.post(`${QUOTE_MODEL_URL}`, {\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(matrix)\n        }).then((response) => {\n            if (response.status !== 200) {\n                throw Error('Fail to request the answer from the server');\n            }\n\n            \n            // console.log(response);\n            this.setState({ currentPrediction: response.data.prediction}); // Set the result when the promise resolves\n            console.log(this.state.currentPrediction+text1);\n            return response; // Return the result value\n        });\n    }\n\n    onQuoteModels = async (data) => {\n        return fetch(`${QUOTE_MODEL_URL}`, {\n            method: 'post',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n        }).then((response) => {\n            if (response.status !== 200) {\n                throw Error('Fail to request the prediction from the server');\n            }\n\n            return response.json();\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Main\" style={{fontWeight: \"bold\"}}>\n                <Tabs defaultActiveKey = \"prediction\">\n                    <Tabs.TabPane tab=\"Prediction\" key=\"prediction\">\n                        <p className=\"larger-text\">IntelliHealth Prediction</p>\n                        <p style={{fontWeight: \"normal\", fontSize: \"15px\"}}>\n                            Please input the following information to get a prediction of your risk of getting diabetes.\n                        </p>\n                        \n                        <Form ref={this.formRef}>\n                           \n                            <Row gutter={[16, 0]}>\n                            <Col span={12}>\n                                <Form.Item\n                                label=\"Gender\"\n                                name=\"gender\"\n                                rules={[\n                                    {\n                                    required: true,\n                                    message: 'Please select an option',\n                                    validator: (_, value) =>\n                                        value ? Promise.resolve() : Promise.reject('Please select an option'),\n                                    },\n                                ]}\n                                labelAlign=\"left\"\n                                wrapperCol={{ span: 24 }} // Adjust the span value to control the width of the buttons container\n                                >\n                                <SelectionButton\n                                    isSelected={this.state.maleisSelected1}\n                                    onSelect={this.onClickMale}\n                                    label=\"Male\"\n                                />\n                                <SelectionButton\n                                    isSelected={this.state.femaleisSelected2}\n                                    onSelect={this.onClickFemale}\n                                    label=\"Female\"\n                                />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item\n                                label=\"Heart Disease\"\n                                name=\"heartdisease\"\n                                rules={[\n                                    {\n                                    required: true,\n                                    message: 'Please select an option',\n                                    validator: (_, value) =>\n                                        value ? Promise.resolve() : Promise.reject('Please select an option'),\n                                    },\n                                ]}\n                                labelAlign=\"left\"\n                                wrapperCol={{ span: 16 }} // Adjust the span value to control the width of the buttons container\n                                >\n                                <SelectionButton\n                                    isSelected={this.state.hedisisSelected1}\n                                    onSelect={this.onClickheartdis1}\n                                    label=\"No\"\n                                />\n                                <SelectionButton\n                                    isSelected={this.state.hedisisSelected2}\n                                    onSelect={this.onClickheartdis2}\n                                    label=\"Yes\"\n                                />\n                                </Form.Item>\n                            </Col>\n                            </Row>\n                            <Row gutter={[16, 0]}>\n                            <Col span={12}>\n                                <Form.Item\n                                label=\"Hypertension\"\n                                name=\"hypertension\"\n                                rules={[\n                                    {\n                                    required: true,\n                                    message: 'Please select an option',\n                                    validator: (_, value) =>\n                                        value ? Promise.resolve() : Promise.reject('Please select an option'),\n                                    },\n                                ]}\n                                labelAlign=\"left\"\n                                wrapperCol={{ span: 17 }} // Adjust the span value to control the width of the buttons container\n                                >\n                                <SelectionButton\n                                    isSelected={this.state.hyperisSelected2}\n                                    onSelect={this.onClickhypertension2}\n                                    label=\"Yes\"\n                                />\n                                <SelectionButton\n                                    isSelected={this.state.hyperisSelected1}\n                                    onSelect={this.onClickhypertension1}\n                                    label=\"No\"\n                                />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"Age (years)\" name=\"age\" initialValue={80} rules={[\n                                                                                {\n                                                                                required: true,\n                                                                                message: 'Please select an option',\n                                                                                validator: (_, value) =>\n                                                                                    value ? Promise.resolve() : Promise.reject('Please select an option'),\n                                                                                },\n                                                                            ]}  \n                                                                            labelAlign=\"left\"\n                                wrapperCol={{ span: 24 }} >\n                                    <InputNumber min={0} max={100} onChange={this.onChangeAge} precision={0}/>\n                                </Form.Item>\n                            </Col>\n                            </Row>\n                            <Row gutter={[16, 0]}>\n                            <Col span={12}>\n                            <Form.Item label=\"Smoking History (years)\" name=\"smokingHistory\" initialValue={4} rules={[\n                                                                            {\n                                                                            required: true,\n                                                                            message: 'Please select an option',\n                                                                            validator: (_, value) =>\n                                                                                value ? Promise.resolve() : Promise.reject('Please select an option'),\n                                                                            },\n                                                                        ]}  \n                                                                        labelAlign=\"left\" wrapperCol={{ span: 8 }} >\n                                   <InputNumber min={0} max={100} onChange={this.onChangeSmokingHistory} precision={2}/>\n                            </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"BMI (kg/m2)\" name=\"bmi\" initialValue={25.19} rules={[\n                                                                                {\n                                                                                required: true,\n                                                                                message: 'Please select an option',\n                                                                                validator: (_, value) =>\n                                                                                    value ? Promise.resolve() : Promise.reject('Please select an option'),\n                                                                                },\n                                                                            ]}  \n                                                                            labelAlign=\"left\" wrapperCol={{ span: 29 }} >\n                                    <InputNumber min={0} max={100} onChange={this.onChangeBmi} precision={2}/>\n                                </Form.Item>\n                            </Col>\n                            </Row>\n                            <Row gutter={[16, 0]}>\n                            <Col span={12}>\n                            <Form.Item label=\"HbA1c Level\" name=\"hbA1cLevel\" initialValue={6.6} rules={[{ required: true, message: 'Please input valid numbers'}]} labelAlign=\"left\" wrapperCol={{ span: 19 }}>\n                                <InputNumber min={0} max={100} onChange={this.onChangeHbA1cLevel} precision={2}/>\n                            </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"Blood Glucose Level (mg/dL)\" name=\"bloodGlucoseLevel\" initialValue={140} rules={[{ required: true, message: 'Please input valid numbers'}]} labelAlign=\"left\" wrapperCol={{ span: 1 }}>\n                                    <InputNumber min={0} max={600} onChange={this.onChangeBloodGlucoseLevel} precision={2}/>\n                                </Form.Item>\n                            </Col>\n                            </Row>\n                    \n                        </Form>\n\n                        <Button  type=\"primary\" htmlType=\"submit\" onClick={this.onClickExample1} style={{ margin: 20 }}> Example 1 </Button>\n\n                        <Button  type=\"primary\" htmlType=\"submit\" onClick={this.onClickExample2} style={{  margin: 20 }}> Example 2 </Button>\n\n                        <p></p>\n\n                        <Button  type=\"primary\" htmlType=\"submit\" onClick={this.onClickPrediction}> Get Prediction </Button>\n\n\n\n                <div>\n                    <Card title=\"Prediction: \" bordered={false} style={{ width: 800, margin: 20}}>\n                    <p style={{ textAlign: 'left' }}>\n                        {this.state.currentPrediction !== null ? (\n                            this.state.currentPrediction.split('\\n').map((paragraph, index) => (\n                            <React.Fragment key={index}>\n                                {index > 0 && <span style={{ marginLeft: '20px' }} />}\n                                {paragraph}\n                                <br />\n                            </React.Fragment>\n                            ))\n                        ) : (\n                            <span>No prediction available.</span>\n                        )}\n                    </p>\n                    </Card>\n\n            </div>\n            <p>\n            </p>\n                </Tabs.TabPane>\n                <p>\n                    \n                </p>\n                    <Tabs.TabPane tab=\"Chatbot\" key=\"chatbot\">\n                        <p className=\"larger-text\">IntelliHealth Prediction</p>\n                        <p style={{fontWeight: \"normal\", fontSize: \"15px\"}}>\n                            If you have any question, feel free to ask any questions about the diabetes\n                        </p>\n\n\n                        <TextArea showCount maxLength={100} onChange={this.onChangeQuestions} style={{ width: 800, height: 50}} />\n                        <p>\n\n                        </p>\n\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={this.onClickQuetions}> Send it </Button>\n\n                        <p>\n\n                        </p>\n\n                        <div>\n                            <Card title=\"ChatBot Response: \" bordered={false} style={{ width: 800, margin: 20 }}>\n                                <p >\n                                    {this.state.currentAnswer}\n                                </p>\n                            </Card>\n\n                        </div>\n                    </Tabs.TabPane>\n                </Tabs>\n            </div>\n        );\n    }\n}\nexport default Physician;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}