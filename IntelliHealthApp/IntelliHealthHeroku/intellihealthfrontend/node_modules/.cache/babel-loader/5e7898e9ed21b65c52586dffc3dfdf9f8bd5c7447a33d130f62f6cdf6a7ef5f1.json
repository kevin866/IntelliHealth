{"ast":null,"code":"var _jsxFileName = \"/Users/kangwang/Documents/GitHub/IntelliHealth/IntelliHealthApp/IntelliHealthReact/intellihealthfrontend/src/components/Physician.js\";\nimport React, { Component, useState } from 'react';\nimport { Button, Input, Card, Form, InputNumber, Tabs } from 'antd';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ASK_QUETIONS_URL = 'http://127.0.0.1:5000/api/v1/chat/';\nconst QUOTE_MODEL_URL = 'http://127.0.0.1:5000/api/v1/model/prediction';\nconst {\n  TextArea\n} = Input;\nlet text1 = \"sea\";\nclass Physician extends Component {\n  constructor(props) {\n    super(props);\n    // define state for the components states\n    this.onClickExample1 = async () => {\n      console.log(\"clicked example 1\");\n      await this.setState({\n        gender: 0\n      });\n      this.formRef.current.setFieldsValue({\n        gender: 0\n      });\n      await this.setState({\n        age: 80\n      });\n      this.formRef.current.setFieldsValue({\n        age: 80\n      });\n      await this.setState({\n        hypertension: 0\n      });\n      this.formRef.current.setFieldsValue({\n        hypertension: 0\n      });\n      await this.setState({\n        heartdisease: 1\n      });\n      this.formRef.current.setFieldsValue({\n        heartdisease: 1\n      });\n      await this.setState({\n        smokingHistory: 4\n      });\n      this.formRef.current.setFieldsValue({\n        smokingHistory: 4\n      });\n      await this.setState({\n        bmi: 25.19\n      });\n      this.formRef.current.setFieldsValue({\n        bmi: 25.19\n      });\n      await this.setState({\n        hbA1cLevel: 6.6\n      });\n      this.formRef.current.setFieldsValue({\n        hbA1cLevel: 6.6\n      });\n      await this.setState({\n        bloodGlucoseLevel: 140\n      });\n      this.formRef.current.setFieldsValue({\n        bloodGlucoseLevel: 140\n      });\n      console.log(\"Data set to example 1\");\n      // console.log(this.state.gender);\n    };\n    this.onClickExample2 = async () => {\n      console.log(\"clicked example 2\");\n      await this.setState({\n        gender: 1\n      });\n      this.formRef.current.setFieldsValue({\n        gender: 1\n      });\n      await this.setState({\n        age: 90\n      });\n      this.formRef.current.setFieldsValue({\n        age: 90\n      });\n      await this.setState({\n        hypertension: 1\n      });\n      this.formRef.current.setFieldsValue({\n        hypertension: 1\n      });\n      await this.setState({\n        heartdisease: 1\n      });\n      this.formRef.current.setFieldsValue({\n        heartdisease: 1\n      });\n      await this.setState({\n        smokingHistory: 12\n      });\n      this.formRef.current.setFieldsValue({\n        smokingHistory: 12\n      });\n      await this.setState({\n        bmi: 40\n      });\n      this.formRef.current.setFieldsValue({\n        bmi: 40\n      });\n      await this.setState({\n        hbA1cLevel: 10\n      });\n      this.formRef.current.setFieldsValue({\n        hbA1cLevel: 10\n      });\n      await this.setState({\n        bloodGlucoseLevel: 260\n      });\n      this.formRef.current.setFieldsValue({\n        bloodGlucoseLevel: 260\n      });\n      console.log(\"Data set to example 2\");\n      // console.log(this.state.gender);\n    };\n    this.onClickMale = async () => {\n      console.log(\"clicked example 1\");\n      await this.setState({\n        gender: 0\n      });\n      this.formRef.current.setFieldsValue({\n        gender: 0\n      });\n    };\n    this.onClickFemale = async () => {\n      console.log(\"clicked example 1\");\n      await this.setState({\n        gender: 0\n      });\n      this.formRef.current.setFieldsValue({\n        gender: 1\n      });\n    };\n    this.onClickQuetions = async () => {\n      console.log(\"clicked ask quetions\");\n\n      // const response = await this.onAskQuestions();\n      // // console.log(response);\n      // this.setState({ currentAnswer: response });\n      // console.log(this.state.currentAnswer);\n      // // console.log(this.state.currentAnswer.created)\n\n      await this.onAskQuestions();\n      console.log(this.state.currentAnswer);\n    };\n    this.onSetAnswers = async response => {\n      await this.setState({\n        currentAnswer: response\n      });\n      console.log(this.state.currentAnswer);\n    };\n    this.onClickModels = async () => {\n      console.log(\"clicked quote models\");\n      const response = await this.onQuoteModels();\n      console.log(response);\n    };\n    this.onChangeQuestions = async e => {\n      await this.setState({\n        currentQuestion: e.target.value\n      });\n      console.log(this.state.currentQuestion);\n    };\n    this.onChangeModels = async e => {\n      await this.setState({\n        currentQuote: e.target.value\n      });\n      console.log(this.state.currentQuote);\n    };\n    this.onChangeGender = async e => {\n      await this.setState({\n        gender: e\n      });\n      console.log(this.state.gender);\n    };\n    this.onChangeAge = async e => {\n      await this.setState({\n        age: e\n      });\n      console.log(this.state.age);\n    };\n    this.onChangeHypertension = async e => {\n      await this.setState({\n        hypertension: e\n      });\n      console.log(this.state.hypertension);\n    };\n    this.onChangeHeartdisease = async e => {\n      await this.setState({\n        heartdisease: e\n      });\n      console.log(this.state.heartdisease);\n    };\n    this.onChangeSmokingHistory = async e => {\n      await this.setState({\n        smokingHistory: e\n      });\n      console.log(this.state.smokingHistory);\n    };\n    this.onChangeBmi = async e => {\n      await this.setState({\n        bmi: e\n      });\n      console.log(this.state.bmi);\n    };\n    this.onChangeHbA1cLevel = async e => {\n      await this.setState({\n        hbA1cLevel: e\n      });\n      console.log(this.state.hbA1cLevel);\n    };\n    this.onChangeBloodGlucoseLevel = async e => {\n      await this.setState({\n        BloodGlucoseLevel: e\n      });\n      console.log(this.state.BloodGlucoseLevel);\n    };\n    // onAskQuestions = async () => {\n    //     return fetch(`${ASK_QUETIONS_URL}${this.state.currentQuestion}`, {\n    //         method: 'GET',\n    //         headers: {\n    //         'Content-Type': 'application/json',\n    //         },\n    //     }).then((response) => {\n    //         if (response.status !== 200) {\n    //             throw Error('Fail to request the answer from the server');\n    //         }\n    //         return response.json(); // Return the promise directly\n    //     }).then((result) => {\n    //         console.log(result);\n    //         this.setState({ currentAnswer: result }); // Set the result when the promise resolves\n    //         // console.log(this.state.currentAnswer);\n    //         return result; // Return the result value\n    //     });\n    // }\n    this.onAskQuestions = () => {\n      axios.get(`${ASK_QUETIONS_URL}${this.state.currentQuestion}`, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        if (response.status !== 200) {\n          throw Error('Fail to request the answer from the server');\n        }\n        console.log(response);\n        this.setState({\n          currentAnswer: response.data.text\n        }); // Set the result when the promise resolves\n        // console.log(this.state.currentAnswer);\n        return response; // Return the result value\n      });\n    };\n    this.onClickPrediction = () => {\n      var data = [[this.state.gender, this.state.age, this.state.hypertension, this.state.heartdisease, this.state.smokingHistory, this.state.bmi, this.state.hbA1cLevel, this.state.bloodGlucoseLevel]];\n      var matrix = {\n        'data': data\n      };\n      console.log(matrix);\n      console.log(JSON.stringify(matrix));\n      axios.post(`${QUOTE_MODEL_URL}`, {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(matrix)\n      }).then(response => {\n        if (response.status !== 200) {\n          throw Error('Fail to request the answer from the server');\n        }\n\n        // console.log(response);\n        this.setState({\n          currentPrediction: response.data.prediction\n        }); // Set the result when the promise resolves\n        console.log(this.state.currentPrediction + text1);\n        return response; // Return the result value\n      });\n    };\n    this.onQuoteModels = async data => {\n      return fetch(`${QUOTE_MODEL_URL}`, {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      }).then(response => {\n        if (response.status !== 200) {\n          throw Error('Fail to request the prediction from the server');\n        }\n        return response.json();\n      });\n    };\n    this.state = {\n      currentQuestion: null,\n      currentQuote: null,\n      currentAnswer: \"Your answer will be displayed here\",\n      gender: 0,\n      age: 80,\n      hypertension: 0,\n      heartdisease: 1,\n      smokingHistory: 4,\n      bmi: 25.19,\n      hbA1cLevel: 6.6,\n      bloodGlucoseLevel: 140,\n      currentPrediction: \"Your prediction will be displayed here\"\n    };\n    this.formRef = /*#__PURE__*/React.createRef();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      style: {\n        fontWeight: \"bold\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        defaultActiveKey: \"prediction\",\n        children: [/*#__PURE__*/_jsxDEV(Tabs.TabPane, {\n          tab: \"Prediction\",\n          children: [\"IntelliHealth Prediction\", /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: \"normal\",\n              fontSize: \"15px\"\n            },\n            children: \"Please input the following information to get a prediction of your risk of getting diabetes.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            ref: this.formRef,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Gender\",\n              name: \"gender\",\n              initialValue: 0,\n              rules: [{\n                required: true,\n                message: 'Please input valid numbers'\n              }],\n              children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                min: 0,\n                max: 1,\n                onChange: this.onChangeGender,\n                precision: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Gender\",\n              name: \"gender\",\n              rules: [{\n                required: true\n              }],\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                onClick: this.onClickMale,\n                style: {\n                  margin: 20\n                },\n                children: \" Male \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                htmlType: \"submit\",\n                onClick: this.onClickFemale,\n                style: {\n                  margin: 20\n                },\n                children: \" Female \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Age\",\n              name: \"age\",\n              initialValue: 80,\n              rules: [{\n                required: true,\n                message: 'Please input valid numbers'\n              }],\n              children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                min: 0,\n                max: 100,\n                onChange: this.onChangeAge,\n                precision: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Hypertension\",\n              name: \"hypertension\",\n              initialValue: 0,\n              rules: [{\n                required: true,\n                message: 'Please input valid numbers'\n              }],\n              children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                min: 0,\n                max: 1,\n                onChange: this.onChangeHypertension,\n                precision: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Heart Disease\",\n              name: \"heartdisease\",\n              initialValue: 1,\n              rules: [{\n                required: true,\n                message: 'Please input valid numbers'\n              }],\n              children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                min: 0,\n                max: 1,\n                onChange: this.onChangeHeartdisease,\n                precision: 0\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Smoking History\",\n              name: \"smokingHistory\",\n              initialValue: 4,\n              rules: [{\n                required: true,\n                message: 'Please input valid numbers'\n              }],\n              children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                min: 0,\n                max: 100,\n                onChange: this.onChangeSmokingHistory,\n                precision: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"BMI\",\n              name: \"bmi\",\n              initialValue: 25.19,\n              rules: [{\n                required: true,\n                message: 'Please input valid numbers'\n              }],\n              children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                min: 0,\n                max: 100,\n                onChange: this.onChangeBmi,\n                precision: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"HbA1c Level\",\n              name: \"hbA1cLevel\",\n              initialValue: 6.6,\n              rules: [{\n                required: true,\n                message: 'Please input valid numbers'\n              }],\n              children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                min: 0,\n                max: 100,\n                onChange: this.onChangeHbA1cLevel,\n                precision: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n              label: \"Blood Glucose Level\",\n              name: \"bloodGlucoseLevel\",\n              initialValue: 140,\n              rules: [{\n                required: true,\n                message: 'Please input valid numbers'\n              }],\n              children: /*#__PURE__*/_jsxDEV(InputNumber, {\n                min: 0,\n                max: 600,\n                onChange: this.onChangeBloodGlucoseLevel,\n                precision: 2\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            onClick: this.onClickExample1,\n            style: {\n              margin: 20\n            },\n            children: \" Example 1 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            onClick: this.onClickExample2,\n            style: {\n              margin: 20\n            },\n            children: \" Example 2 \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            onClick: this.onClickPrediction,\n            children: \" Get Prediction \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"Prediction: \",\n              bordered: false,\n              style: {\n                width: 800,\n                margin: 20\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: 'left'\n                },\n                children: this.state.currentPrediction !== null ? this.state.currentPrediction.split('\\n').map((paragraph, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [index > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      marginLeft: '20px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 334,\n                    columnNumber: 47\n                  }, this), paragraph, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 33\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 29\n                }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"No prediction available.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this)]\n        }, \"prediction\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tabs.TabPane, {\n          tab: \"Chatbot\",\n          children: [\"IntelliHealth ChatBot\", /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontWeight: \"normal\",\n              fontSize: \"15px\"\n            },\n            children: \"If you have any question, feel free to ask any questions about the diabetes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            showCount: true,\n            maxLength: 100,\n            onChange: this.onChangeQuestions,\n            style: {\n              width: 800,\n              height: 350\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            onClick: this.onClickQuetions,\n            children: \" Send it \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              title: \"ChatBot Response: \",\n              bordered: false,\n              style: {\n                width: 800,\n                margin: 20\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: this.state.currentAnswer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this)]\n        }, \"chatbot\", true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Physician;","map":{"version":3,"names":["React","Component","useState","Button","Input","Card","Form","InputNumber","Tabs","axios","jsxDEV","_jsxDEV","ASK_QUETIONS_URL","QUOTE_MODEL_URL","TextArea","text1","Physician","constructor","props","onClickExample1","console","log","setState","gender","formRef","current","setFieldsValue","age","hypertension","heartdisease","smokingHistory","bmi","hbA1cLevel","bloodGlucoseLevel","onClickExample2","onClickMale","onClickFemale","onClickQuetions","onAskQuestions","state","currentAnswer","onSetAnswers","response","onClickModels","onQuoteModels","onChangeQuestions","e","currentQuestion","target","value","onChangeModels","currentQuote","onChangeGender","onChangeAge","onChangeHypertension","onChangeHeartdisease","onChangeSmokingHistory","onChangeBmi","onChangeHbA1cLevel","onChangeBloodGlucoseLevel","BloodGlucoseLevel","get","headers","then","status","Error","data","text","onClickPrediction","matrix","JSON","stringify","post","body","currentPrediction","prediction","fetch","method","json","createRef","render","className","style","fontWeight","children","defaultActiveKey","TabPane","tab","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","ref","Item","label","name","initialValue","rules","required","message","min","max","onChange","precision","type","htmlType","onClick","margin","title","bordered","width","textAlign","split","map","paragraph","index","Fragment","marginLeft","showCount","maxLength","height"],"sources":["/Users/kangwang/Documents/GitHub/IntelliHealth/IntelliHealthApp/IntelliHealthReact/intellihealthfrontend/src/components/Physician.js"],"sourcesContent":["import React, {Component, useState} from 'react';\nimport { Button, Input, Card, Form, InputNumber, Tabs} from 'antd';\nimport axios from 'axios';\n\n\n\nconst ASK_QUETIONS_URL = 'http://127.0.0.1:5000/api/v1/chat/'\nconst QUOTE_MODEL_URL = 'http://127.0.0.1:5000/api/v1/model/prediction'\nconst { TextArea } = Input;\nlet text1 = \"sea\";\nclass Physician extends Component {\n    constructor(props) {\n        super(props);\n        // define state for the components states\n        this.state = {\n            currentQuestion: null,\n            currentQuote: null,\n            currentAnswer: \"Your answer will be displayed here\",\n            gender: 0,\n            age: 80,\n            hypertension: 0,\n            heartdisease: 1,\n            smokingHistory: 4,\n            bmi: 25.19,\n            hbA1cLevel: 6.6,\n            bloodGlucoseLevel: 140,\n            currentPrediction: \"Your prediction will be displayed here\",\n        }\n        this.formRef = React.createRef();\n    }\n\n    onClickExample1 = async () => {\n        console.log(\"clicked example 1\");\n        await this.setState({ gender: 0 });\n        this.formRef.current.setFieldsValue({\n            gender: 0,\n        });\n        await this.setState({ age: 80 });\n        this.formRef.current.setFieldsValue({\n            age: 80,\n        });\n        await this.setState({ hypertension: 0 });\n        this.formRef.current.setFieldsValue({\n            hypertension: 0,\n        });\n        await this.setState({ heartdisease: 1 });\n        this.formRef.current.setFieldsValue({\n            heartdisease: 1,\n        });\n        await this.setState({ smokingHistory: 4 });\n        this.formRef.current.setFieldsValue({\n            smokingHistory: 4,\n        });\n        await this.setState({ bmi: 25.19 });\n        this.formRef.current.setFieldsValue({\n            bmi: 25.19,\n        });\n        await this.setState({ hbA1cLevel: 6.6 });\n        this.formRef.current.setFieldsValue({\n            hbA1cLevel: 6.6,\n        });\n        await this.setState({ bloodGlucoseLevel: 140 });\n        this.formRef.current.setFieldsValue({\n            bloodGlucoseLevel: 140,\n        });\n        console.log(\"Data set to example 1\");\n        // console.log(this.state.gender);\n    }\n\n    onClickExample2 = async () => {\n        console.log(\"clicked example 2\");\n        await this.setState({ gender: 1 });\n        this.formRef.current.setFieldsValue({\n            gender: 1,\n        });\n        await this.setState({ age: 90 });\n        this.formRef.current.setFieldsValue({\n            age: 90,\n        });\n        await this.setState({ hypertension: 1 });\n        this.formRef.current.setFieldsValue({\n            hypertension: 1,\n        });\n        await this.setState({ heartdisease: 1 });\n        this.formRef.current.setFieldsValue({\n            heartdisease: 1,\n        });\n        await this.setState({ smokingHistory: 12 });\n        this.formRef.current.setFieldsValue({\n            smokingHistory: 12,\n        });\n        await this.setState({ bmi: 40 });\n        this.formRef.current.setFieldsValue({\n            bmi: 40,\n        });\n        await this.setState({ hbA1cLevel: 10 });\n        this.formRef.current.setFieldsValue({\n            hbA1cLevel: 10,\n        });\n        await this.setState({ bloodGlucoseLevel: 260 });\n        this.formRef.current.setFieldsValue({\n            bloodGlucoseLevel: 260,\n        });\n        console.log(\"Data set to example 2\");\n        // console.log(this.state.gender);\n    }\n\n    onClickMale = async () => {\n        console.log(\"clicked example 1\");\n        await this.setState({ gender: 0 });\n        this.formRef.current.setFieldsValue({\n            gender: 0,\n        });\n    }\n\n    onClickFemale = async () => {\n        console.log(\"clicked example 1\");\n        await this.setState({ gender: 0 });\n        this.formRef.current.setFieldsValue({\n            gender: 1,\n        });\n    }\n\n    onClickQuetions = async () => {\n        console.log(\"clicked ask quetions\");\n\n        // const response = await this.onAskQuestions();\n        // // console.log(response);\n        // this.setState({ currentAnswer: response });\n        // console.log(this.state.currentAnswer);\n        // // console.log(this.state.currentAnswer.created)\n\n        await this.onAskQuestions();\n        console.log(this.state.currentAnswer);\n    }\n\n    onSetAnswers = async (response) => {\n        await this.setState({ currentAnswer : response });\n        console.log(this.state.currentAnswer);\n    }\n\n    onClickModels = async () => {\n        console.log(\"clicked quote models\");\n\n        const response = await this.onQuoteModels();\n        console.log(response);\n    }\n\n    onChangeQuestions = async (e) => {\n        await this.setState({ currentQuestion : e.target.value });\n        console.log(this.state.currentQuestion);\n    }\n\n    onChangeModels = async e => {\n        await this.setState({ currentQuote : e.target.value });\n        console.log(this.state.currentQuote);\n    }\n\n    onChangeGender = async (e) => {\n        await this.setState({ gender : e });\n        console.log(this.state.gender);\n    }\n\n    onChangeAge = async e => {\n        await this.setState({ age : e});\n        console.log(this.state.age);\n    }\n\n    onChangeHypertension = async e => {\n        await this.setState({ hypertension : e });\n        console.log(this.state.hypertension);\n    }\n\n    onChangeHeartdisease = async e => {\n        await this.setState({ heartdisease : e });\n        console.log(this.state.heartdisease);\n    }\n\n    onChangeSmokingHistory = async e => {\n        await this.setState({ smokingHistory : e });\n        console.log(this.state.smokingHistory);\n    }\n\n    onChangeBmi = async e => {\n        await this.setState({ bmi : e });\n        console.log(this.state.bmi);\n    }\n\n    onChangeHbA1cLevel = async e => {\n        await this.setState({ hbA1cLevel : e });\n        console.log(this.state.hbA1cLevel);\n    }\n\n    onChangeBloodGlucoseLevel = async e => {\n        await this.setState({ BloodGlucoseLevel : e });\n        console.log(this.state.BloodGlucoseLevel);\n    }\n\n    // onAskQuestions = async () => {\n    //     return fetch(`${ASK_QUETIONS_URL}${this.state.currentQuestion}`, {\n    //         method: 'GET',\n    //         headers: {\n    //         'Content-Type': 'application/json',\n    //         },\n    //     }).then((response) => {\n    //         if (response.status !== 200) {\n    //             throw Error('Fail to request the answer from the server');\n    //         }\n\n    //         return response.json(); // Return the promise directly\n    //     }).then((result) => {\n    //         console.log(result);\n    //         this.setState({ currentAnswer: result }); // Set the result when the promise resolves\n    //         // console.log(this.state.currentAnswer);\n    //         return result; // Return the result value\n    //     });\n    // }\n\n    onAskQuestions = () => {\n        axios.get(`${ASK_QUETIONS_URL}${this.state.currentQuestion}`, {\n            headers: {\n            'Content-Type': 'application/json',\n            },\n        }).then((response) => {\n            if (response.status !== 200) {\n                throw Error('Fail to request the answer from the server');\n            }\n\n            \n            console.log(response);\n            this.setState({ currentAnswer: response.data.text}); // Set the result when the promise resolves\n            // console.log(this.state.currentAnswer);\n            return response; // Return the result value\n        });\n    }\n\n    onClickPrediction = () => {\n        var data = [[this.state.gender, this.state.age, this.state.hypertension, this.state.heartdisease, this.state.smokingHistory, this.state.bmi, this.state.hbA1cLevel, this.state.bloodGlucoseLevel]]\n        var matrix = { 'data': data }\n        console.log(matrix);\n        console.log(JSON.stringify(matrix));\n        axios.post(`${QUOTE_MODEL_URL}`, {\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(matrix)\n        }).then((response) => {\n            if (response.status !== 200) {\n                throw Error('Fail to request the answer from the server');\n            }\n\n            \n            // console.log(response);\n            this.setState({ currentPrediction: response.data.prediction}); // Set the result when the promise resolves\n            console.log(this.state.currentPrediction+text1);\n            return response; // Return the result value\n        });\n    }\n\n    onQuoteModels = async (data) => {\n        return fetch(`${QUOTE_MODEL_URL}`, {\n            method: 'post',\n            headers: {\n            'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n        }).then((response) => {\n            if (response.status !== 200) {\n                throw Error('Fail to request the prediction from the server');\n            }\n\n            return response.json();\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"Main\" style={{fontWeight: \"bold\"}}>\n                <Tabs defaultActiveKey = \"prediction\">\n                    <Tabs.TabPane tab=\"Prediction\" key=\"prediction\">\n                        IntelliHealth Prediction\n                        <p style={{fontWeight: \"normal\", fontSize: \"15px\"}}>\n                            Please input the following information to get a prediction of your risk of getting diabetes.\n                        </p>\n\n                        <Form ref={this.formRef}>\n                            <Form.Item label=\"Gender\" name=\"gender\" initialValue={0} rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                                <InputNumber min={0} max={1} onChange={this.onChangeGender} precision={0}/>\n                            </Form.Item>\n                            <Form.Item label = \"Gender\" name=\"gender\" rules={[{ required: true}]}>\n                            <Button  type=\"primary\" htmlType=\"submit\" onClick={this.onClickMale} style={{ margin: 20 }}> Male </Button>\n                            <Button  type=\"primary\" htmlType=\"submit\" onClick={this.onClickFemale} style={{ margin: 20 }}> Female </Button>\n                            </Form.Item>\n                            <Form.Item label=\"Age\" name=\"age\" initialValue={80} rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                                <InputNumber min={0} max={100} onChange={this.onChangeAge} precision={0}/>\n                            </Form.Item>\n                            <Form.Item label=\"Hypertension\" name=\"hypertension\" initialValue={0} rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                                <InputNumber min={0} max={1} onChange={this.onChangeHypertension} precision={0}/>\n                            </Form.Item>\n                            <Form.Item label=\"Heart Disease\" name=\"heartdisease\" initialValue={1} rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                                <InputNumber min={0} max={1} onChange={this.onChangeHeartdisease} precision={0}/>\n                            </Form.Item>\n                            <Form.Item label=\"Smoking History\" name=\"smokingHistory\" initialValue={4} rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                                <InputNumber min={0} max={100} onChange={this.onChangeSmokingHistory} precision={2}/>\n                            </Form.Item>\n                            <Form.Item label=\"BMI\" name=\"bmi\" initialValue={25.19} rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                                <InputNumber min={0} max={100} onChange={this.onChangeBmi} precision={2}/>\n                            </Form.Item>\n                            <Form.Item label=\"HbA1c Level\" name=\"hbA1cLevel\" initialValue={6.6} rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                                <InputNumber min={0} max={100} onChange={this.onChangeHbA1cLevel} precision={2}/>\n                            </Form.Item>\n                            <Form.Item label=\"Blood Glucose Level\" name=\"bloodGlucoseLevel\" initialValue={140} rules={[{ required: true, message: 'Please input valid numbers'}]}>\n                                <InputNumber min={0} max={600} onChange={this.onChangeBloodGlucoseLevel} precision={2}/>\n                            </Form.Item>\n\n                        </Form>\n\n                        <Button  type=\"primary\" htmlType=\"submit\" onClick={this.onClickExample1} style={{ margin: 20 }}> Example 1 </Button>\n\n                        <Button  type=\"primary\" htmlType=\"submit\" onClick={this.onClickExample2} style={{  margin: 20 }}> Example 2 </Button>\n\n                        <p></p>\n\n                        <Button  type=\"primary\" htmlType=\"submit\" onClick={this.onClickPrediction}> Get Prediction </Button>\n\n\n\n                <div>\n                    <Card title=\"Prediction: \" bordered={false} style={{ width: 800, margin: 20}}>\n                    <p style={{ textAlign: 'left' }}>\n                        {this.state.currentPrediction !== null ? (\n                            this.state.currentPrediction.split('\\n').map((paragraph, index) => (\n                            <React.Fragment key={index}>\n                                {index > 0 && <span style={{ marginLeft: '20px' }} />}\n                                {paragraph}\n                                <br />\n                            </React.Fragment>\n                            ))\n                        ) : (\n                            <span>No prediction available.</span>\n                        )}\n                    </p>\n                    </Card>\n\n                        </div>\n                    </Tabs.TabPane>\n\n                    <Tabs.TabPane tab=\"Chatbot\" key=\"chatbot\">\n                        IntelliHealth ChatBot\n                        <p style={{fontWeight: \"normal\", fontSize: \"15px\"}}>\n                            If you have any question, feel free to ask any questions about the diabetes\n                        </p>\n\n\n                        <TextArea showCount maxLength={100} onChange={this.onChangeQuestions} style={{ width: 800, height: 350 }} />\n                        <p>\n\n                        </p>\n\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={this.onClickQuetions}> Send it </Button>\n\n                        <p>\n\n                        </p>\n\n                        <div>\n                            <Card title=\"ChatBot Response: \" bordered={false} style={{ width: 800, margin: 20 }}>\n                                <p >\n                                    {this.state.currentAnswer}\n                                </p>\n                            </Card>\n\n                        </div>\n                    </Tabs.TabPane>\n                </Tabs>\n            </div>\n        );\n    }\n}\nexport default Physician;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}